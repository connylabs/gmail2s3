---
stages:
  - build
  - test
  - tag

variables:
  FAILFASTCI_NAMESPACE: connylabs
  OCI_REPO: img.conny.dev
  CONTAINER: connylabs/gmail2s3
  IMAGE_NAME: $OCI_REPO/$CONTAINER
  APPNAME: gmail2s3
  APP: gmail2s3
  DEFAULT_TAG: v.$CI_COMMIT_REF_SLUG
  GMAIL2S3_CONF_FILE: tests/data/test_config.yaml

# BUILD IMAGE
build container:
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - image-cache
  tags:
    - connylabs-main
  stage: build
  image:
    name: img.conny.dev/oss/kaniko/executor:debug
    entrypoint: ['']
  variables:
    TAG: v.$CI_COMMIT_REF_SLUG
    PROJECT_DIR: $CI_PROJECT_DIR
    DOCKERFILE: Dockerfile
  script:
    - echo $DOCKERFILE
    - /kaniko/executor --cache=true --cache-dir=image-cache
                       --context $PROJECT_DIR
                       --dockerfile $PROJECT_DIR/$DOCKERFILE
                       --label 'git-branch'=$CI_COMMIT_REF_SLUG
                       --label 'git-tag=$CI_COMMIT_TAG'
                       --destination $IMAGE_NAME:$TAG
                       --registry-mirror img.conny.dev

# RUN TEST
unit test:
  image:
    name: img.conny.dev/connylabs/gmail2s3:ci.v1
  stage: build
  before_script:
    - pip install -r requirements_dev.txt -U
    - pip install -r requirements.txt -U
  script:
    - pytest --cov=$APP --cov-report=html --cov-report=term-missing  --verbose tests --junitxml=report.xml
    - coverage xml
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml
  tags:
    - oss


code lint:
  image:
    name: img.conny.dev/connylabs/gmail2s3:ci.v1
  stage: build
  script:
    - make check
  tags:
    - oss

test image:
  image:
    name: $IMAGE_NAME:v.$CI_COMMIT_REF_SLUG
  needs:
    - "build container"
  stage: test
  variables:
    GIT_STRATEGY: none
  script:
    - cd /app
    - make test
  tags:
    - kubernetes

tag-main:
  tags:
    - connylabs-main
  stage: tag
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "production"'
    - if: '$CI_COMMIT_TAG'
  variables:
    SOURCE_TAG: v$CI_COMMIT_REF_SLUG
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: ['']
  script:
    - crane cp $IMAGE_NAME:$SOURCE_TAG $IMAGE_NAME:$CI_COMMIT_REF_SLUG
    - crane cp $IMAGE_NAME:$SOURCE_TAG $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - crane cp $IMAGE_NAME:$SOURCE_TAG $IMAGE_NAME:latest
